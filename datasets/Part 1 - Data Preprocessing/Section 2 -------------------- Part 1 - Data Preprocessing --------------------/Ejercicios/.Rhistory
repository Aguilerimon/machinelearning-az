help()
print('Hello world!')
setwd("~/Machine Learning/machinelearning-az/datasets/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Ejercicios")
dataset = rread.csv('Data.csv')
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
dataset = read.csv('Data.csv')
View(dataset)
dataset$Age
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
View(dataset)
View(dataset)
View(dataset)
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Age
View(dataset)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
View(dataset)
# Plantilla para el pre Procesado de Datos
# Importar el dataset
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c("France", "Spain", "Germany"),
labels = c(1, 2, 3)
dataset$Country = factor(dataset$Country,
levels = c("France", "Spain", "Germany"),
labels = c(1, 2, 3))
dataset$Country = factor(dataset$Country,
levels = c("France", "Spain", "Germany"),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased,
levels = c("No", "Yes"),
labels = c(0, 1))
install.packages("caTools")
library(caTools)
detach("package:caTools", unload = TRUE)
library(caTools)
cls
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
training_set = subset(dataset, split=TRUE)
testing_set = subset(dataset, split=FALSE)
View(testing_set)
View(testing_set)
View(testing_set)
View(testing_set)
View(training_set)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split=TRUE)
testing_set = subset(dataset, split=FALSE)
View(training_set)
View(testing_set)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split==TRUE)
testing_set = subset(dataset, split==FALSE)
View(training_set)
View(testing_set)
dataset = read.csv('Data.csv')
#Tratamiento de los valores NA
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
#Codificar variables categ칩ricas
dataset$Country = factor(dataset$Country,
levels = c("France", "Spain", "Germany"),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased,
levels = c("No", "Yes"),
labels = c(0, 1))
#Dividir los datos en conjunto de entrenamiento y evaluaci칩n
#Importamos la libreria para separar los conjuntos
library(caTools)
#Especificamos el numero de repeticiones del algoritmo (Puede ser cualquiera)
set.seed(123)
#Devuelve un vector del mismo tama침o que la variable o vector que se le da
#indicando si debe formar parte del conjunto de entrenamiento
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
#Separa y almacena en dos diferentes variables los conjuntos de
#entrenamiento y evaluaci칩n
training_set = subset(dataset, split==TRUE)
testing_set = subset(dataset, split==FALSE)
View(training_set)
training_set[,2:3] = scale(training_set[,2:3])
testing_set[,2:3] = scale(testing_set[,2:3])
View(testing_set)
View(training_set)
